name: Build

on:
  push:
    branches:
      - "**"
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches:
      - "**"
    types: [opened, synchronize, reopened]

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-win:
    name: Build Windows
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        configuration:
          - release
        arch:
          - x86
          - x64
        include:
          - arch: x86
            platform: Win32
          - arch: x64
            platform: x64
    steps:
      - name: Check out files
        uses: actions/checkout@v3.5.3
        with:
          submodules: true
          fetch-depth: 0
          lfs: false

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.3.1

      - name: Add premake5 to PATH
        uses: abel0b/setup-premake@v2.2
        with:
          version: "5.0.0-beta2"

      - name: Generate project files
        run: premake5 vs2022

      - name: Set up problem matching
        uses: ammaraskar/msvc-problem-matcher@master

      - name: Build ${{matrix.configuration}} ${{matrix.arch}} binaries
        run: msbuild /m /v:minimal /p:Configuration=${{matrix.configuration}} /p:Platform=${{matrix.platform}} build/gsc-tool.sln

      - name: Upload ${{matrix.configuration}} ${{matrix.arch}} binaries
        uses: actions/upload-artifact@v3.1.2
        with:
          name: Windows ${{matrix.configuration}} ${{matrix.arch}} binaries
          path: |
            build/bin/${{matrix.arch}}/${{matrix.configuration}}/gsc-tool.exe

  build-mac:
    name: Build macOS
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        configuration:
          - release
        arch:
          - x64
          - arm64
        include:
          - configuration: release
            config: release
          - arch: x64
            platform: x64
          - arch: arm64
            platform: arm64
    steps:
      - name: Check out files
        uses: actions/checkout@v3.5.3
        with:
          submodules: true
          fetch-depth: 0
          lfs: false

      - name: Add premake5 to PATH
        uses: abel0b/setup-premake@v2.2
        with:
          version: "5.0.0-beta2"

      - name: Generate project files
        run: premake5 gmake2

      - name: Set up problem matching
        uses: ammaraskar/gcc-problem-matcher@master

      - name: Build ${{matrix.configuration}} ${{matrix.arch}} binaries
        run: |
          pushd build
          make config=${{matrix.config}}_${{matrix.arch}} -j$(sysctl -n hw.logicalcpu)

      - name: Upload ${{matrix.configuration}} ${{matrix.arch}} binaries
        uses: actions/upload-artifact@v3.1.2
        with:
          name: macOS ${{matrix.configuration}} ${{matrix.arch}} binaries
          path: |
            build/bin/${{matrix.arch}}/${{matrix.configuration}}/gsc-tool

  build-lin:
    name: Build Linux
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        configuration:
          - release
        arch:
          - x64
          - arm64
        include:
          - configuration: release
            config: release
          - arch: x64
            platform: x64
          - arch: arm64
            platform: arm64
    steps:
      - name: Check out files
        uses: actions/checkout@v3.5.3
        with:
          submodules: true
          fetch-depth: 0
          lfs: false

      - name: Install dependencies (arm64)
        if: matrix.arch == 'arm64'
        run: |
          sudo apt-get update
          sudo apt-get -y install crossbuild-essential-arm64

      - name: Add mold to PATH
        uses: rui314/setup-mold@staging

      - name: Add premake5 to PATH
        uses: abel0b/setup-premake@v2.2
        with:
          version: "5.0.0-beta2"

      - name: Generate project files
        run: premake5 gmake2

      - name: Set up problem matching
        uses: ammaraskar/gcc-problem-matcher@master

      - name: Set up environment variable
        if: matrix.arch == 'arm64'
        run: |
          echo "ARCH=arm64" >> $GITHUB_ENV

      - name: Build ${{matrix.configuration}} ${{matrix.arch}} binaries
        run: |
          pushd build
          make config=${{matrix.config}}_${{matrix.arch}} -j$(nproc)
        env:
         CC: clang
         CXX: clang++

      - name: Upload ${{matrix.configuration}} ${{matrix.arch}} binaries
        uses: actions/upload-artifact@v3.1.2
        with:
          name: Linux ${{matrix.configuration}} ${{matrix.arch}} binaries
          path: |
            build/bin/${{matrix.arch}}/${{matrix.configuration}}/gsc-tool

  deploy:
    name: Deploy Release
    runs-on: ubuntu-latest
    needs: [ build-win, build-mac, build-lin ]
    if: startsWith(github.ref, 'refs/tags/') && (github.event.base_ref == 'refs/heads/prod' || github.event.base_ref == 'refs/heads/dev')
    steps:
      - name: Check out files
        uses: actions/checkout@v3

      - name: Download Binaries
        uses: actions/download-artifact@v3
        with:
          name: Windows release x64 binaries

      - name: Create Release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          draft: true
          files: |
            gsc-tool.exe
